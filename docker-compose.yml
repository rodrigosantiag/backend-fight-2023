services:
  database:
    network_mode: host
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: backend_fight_2023
      POSTGRES_MAX_CONNECTIONS: 1000
      POSTGRES_SHARED_BUFFERS: 512MB
    volumes:
      - .pgdata:/var/lib/postgresql/data
    command: postgres -c 'max_connections=1000'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1.3GB'

  api:
    network_mode: host
    build:
      context: .
      target: application
    volumes:
      - .:/app
    env_file: .env
    environment:
      MODULE_NAME: src.main
      PORT: 3000
      LOG_LEVEL: error
      MAX_WORKERS: 1
    stdin_open: true
    tty: true
    depends_on:
      database:
        condition: service_healthy
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.75GB'

  api1:
    network_mode: host
    build:
      context: .
      target: application
    volumes:
      - .:/app
    env_file: .env
    environment:
      MODULE_NAME: src.main
      PORT: 3001
      LOG_LEVEL: error
      MAX_WORKERS: 1
    stdin_open: true
    tty: true
    depends_on:
      database:
        condition: service_healthy
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.75GB'

  nginx: # Load Balancer
    network_mode: host
    image: nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ~/logs/nginx:/var/log/nginx
    depends_on:
      - api
      - api1
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.2GB'

  testgres:
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: backend_fight_2023
    ports:
      - "15432:5432"
    volumes:
      - .pgdata_test:/var/lib/postgresql/data

  redis:
    network_mode: host
    image: redis:latest
    command: redis-server --save "" --appendonly no --maxclients 20000
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.1GB'

volumes:
  .pgdata_test:
